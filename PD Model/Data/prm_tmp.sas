*****************************************;
** SAS Scoring Code for PROC Logistic;
*****************************************;

length I_Next_stat $ 3;
label I_Next_stat = 'Into: Next_stat' ;
length U_Next_stat $ 3;
label U_Next_stat = 'Unnormalized Into: Next_stat' ;
label P_Next_statCUR = 'Predicted: Next_stat=CUR' ;
label P_Next_statPPY = 'Predicted: Next_stat=PPY' ;
label P_Next_statSDQ = 'Predicted: Next_stat=SDQ' ;
label P_Next_statDEL = 'Predicted: Next_stat=DEL' ;

drop _LMR_BAD;
_LMR_BAD=0;

*** Check interval variables for missing values;
if nmiss(CLTV,Dti,Cscore_b,Curr_rte,HS,GDP,PPI,Loan_age,orig_hpi,QDT_UMP) 
        then do;
   _LMR_BAD=1;
   goto _SKIP_000;
end;

*** Compute Linear Predictors;
drop _LP0 _LP1 _LP2;
_LP0 = 0;
_LP1 = 0;
_LP2 = 0;

*** Effect: CLTV;
_LP0 = _LP0 + (-0.01543430890851) * CLTV;
_LP1 = _LP1 + (-0.02347850040736) * CLTV;
_LP2 = _LP2 + (0.00451045190068) * CLTV;
*** Effect: Dti;
_LP0 = _LP0 + (-0.01568865360913) * Dti;
_LP1 = _LP1 + (-0.02160704838347) * Dti;
_LP2 = _LP2 + (0.00232481317706) * Dti;
*** Effect: Cscore_b;
_LP0 = _LP0 + (0.00731830572064) * Cscore_b;
_LP1 = _LP1 + (0.00842052504491) * Cscore_b;
_LP2 = _LP2 + (0.00862964412285) * Cscore_b;
*** Effect: Curr_rte;
_LP0 = _LP0 + (-0.08681673263675) * Curr_rte;
_LP1 = _LP1 + (0.31269592683318) * Curr_rte;
_LP2 = _LP2 + (0.11474517080142) * Curr_rte;
*** Effect: HS;
_LP0 = _LP0 + (0.00028621499658) * HS;
_LP1 = _LP1 + (-0.00071366548953) * HS;
_LP2 = _LP2 + (-0.00085373313959) * HS;
*** Effect: GDP;
_LP0 = _LP0 + (-0.00004207299502) * GDP;
_LP1 = _LP1 + (0.00021350814635) * GDP;
_LP2 = _LP2 + (7.7241608157532E-6) * GDP;
*** Effect: PPI;
_LP0 = _LP0 + (-0.00247688355369) * PPI;
_LP1 = _LP1 + (0.00329178375987) * PPI;
_LP2 = _LP2 + (-0.00017169494643) * PPI;
*** Effect: Loan_age;
_LP0 = _LP0 + (-0.01310093387058) * Loan_age;
_LP1 = _LP1 + (-0.02238120999386) * Loan_age;
_LP2 = _LP2 + (-0.00510274020477) * Loan_age;
*** Effect: orig_hpi;
_LP0 = _LP0 + (0.00346261020894) * orig_hpi;
_LP1 = _LP1 + (0.00958621388479) * orig_hpi;
_LP2 = _LP2 + (0.01441809996618) * orig_hpi;
*** Effect: QDT_UMP;
_LP0 = _LP0 + (-0.32371939749252) * QDT_UMP;
_LP1 = _LP1 + (0.03968855371617) * QDT_UMP;
_LP2 = _LP2 + (0.13591918317682) * QDT_UMP;

*** Predicted values;
drop _LPMAX _MAXP _IY _P0 _P1 _P2 _P3;
_LPMAX= 0;
_LP0 =    -2.03800396769841 + _LP0;
if _LPMAX < _LP0 then _LPMAX = _LP0;
_LP1 =    -11.7801647819915 + _LP1;
if _LPMAX < _LP1 then _LPMAX = _LP1;
_LP2 =    -10.3119178124835 + _LP2;
if _LPMAX < _LP2 then _LPMAX = _LP2;
_LP0 = exp(_LP0 - _LPMAX);
_LP1 = exp(_LP1 - _LPMAX);
_LP2 = exp(_LP2 - _LPMAX);
_LPMAX = exp(-_LPMAX);
_P3 = 1 / (_LPMAX + _LP0 + _LP1 + _LP2);
_P0 = _LP0 * _P3;
_P1 = _LP1 * _P3;
_P2 = _LP2 * _P3;
_P3 = _LPMAX * _P3;
P_Next_statCUR = _P0;
_MAXP = _P0;
_IY = 1;
P_Next_statPPY = _P1;
if (_P1 >  _MAXP + 1E-8) then do;
   _MAXP = _P1;
   _IY = 2;
end;
P_Next_statSDQ = _P2;
if (_P2 >  _MAXP + 1E-8) then do;
   _MAXP = _P2;
   _IY = 3;
end;
P_Next_statDEL = _P3;
if (_P3 >  _MAXP + 1E-8) then do;
   _MAXP = _P3;
   _IY = 4;
end;
select( _IY );
   when (1) do;
      I_Next_stat = 'CUR' ;
      U_Next_stat = 'CUR' ;
   end;
   when (2) do;
      I_Next_stat = 'PPY' ;
      U_Next_stat = 'PPY' ;
   end;
   when (3) do;
      I_Next_stat = 'SDQ' ;
      U_Next_stat = 'SDQ' ;
   end;
   when (4) do;
      I_Next_stat = 'DEL' ;
      U_Next_stat = 'DEL' ;
   end;
   otherwise do;
      I_Next_stat = '';
      U_Next_stat = '';
   end;
end;
_SKIP_000:
if _LMR_BAD = 1 then do;
I_Next_stat = '';
U_Next_stat = '';
P_Next_statCUR = .;
P_Next_statPPY = .;
P_Next_statSDQ = .;
P_Next_statDEL = .;
end;
